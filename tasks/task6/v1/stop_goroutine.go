package main

import (
	"fmt"
	"time"
)

/*
Реализовать все возможные способы остановки выполнения горутины.

----------------------------------------------------------------

Способ 1: используя механизм закрытия канала, а именно второй возвращаемый аргумент - ok, использование параметра ok можно
избежать, если использовать range в цикле с использованием канала, проверка с ok там находится под капотом
*/

func main() {
	ch := make(chan int)
	defer close(ch)

	go func() {
		for {
			// помимо самого значения получаем еще один параметр - булево ok, который говорит о том, закрыт ли канал или нет
			v, ok := <-ch
			if !ok { // если false -> канал закрыли, c помощью return завершаем горутину
				return
			}
			fmt.Printf("goroutine value=%d\n", v)
		}
	}()

	for i := 0; i < 3; i++ {
		ch <- i
		time.Sleep(500 * time.Millisecond)
	}
}
